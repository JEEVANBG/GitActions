name: 10 - Using Needs

run-name: Variables

on:
  #push:
  workflow_dispatch:
   inputs:
      pass-unit-tests:
        type: boolean
        description: whether unit tests will pass or not
       default: true

jobs:

  lint-build:
    runs-on: ubuntu-latest
    steps:
      - name: Lint and build
        run: echo "Running tests...."

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Running unit test
        run: echo "Running tests...."

      - name: Failing tests
        if: {{ !inputs.pass-unit-tests }}
        run: exit 1

  deploy-nonprod:
    runs-on: ubuntu-latest
    needs:
      - lint-build
      - unit-tests
    steps:
      - name: Deploying to nonprod
        run: echo "Deploying to nonprod...."

      - name: Failing tests
        if: {{ !inputs.pass-unit-tests }}
        run: exit 1

  echo-repo-env-variables:
    runs-on: ubuntu-latest
  
    steps:
      - name: Print Repo Env variables
        run: |
          echo "Repo env var: ${{ vars.REPO_VAR }}"
          echo "Repo over env var: ${{ vars.REPO_OVER_VAR }}"

  echo-env-variables1:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Print Repo Env variables
        run: |
          echo "Prod env target_var: ${{ vars.TARGET_VAR }}"

  echo-env-variables2:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Print Repo Env variables
        run: |
          echo "Prod env target_var: ${{ vars.TARGET_VAR }}"


      #Here we created 2 env prod and staging with common variable TARGET_VAR, so when we set ,
      #environment: prod it will print the TARGET_VAR value of prod environment
      #environment: staging it will print the TARGET_VAR value of staging environment
